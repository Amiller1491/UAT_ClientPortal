@model Final.Models.TestCaseModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>

        <div>

</div>
        <br />

        @Html.HiddenFor(model => model.TestCaseID)

        <div class="editor-label">
            <b>Title</b>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            <b>Steps</b>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Steps)
            @Html.ValidationMessageFor(model => model.Steps)
        </div>

        <div hidden="hidden" class="editor-label">
            <b>Comments</b>
        </div>
        <div hidden="hidden" class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <div class="editor-label">
            <b>Status</b>
        </div>
@if(Model.StatusD.Equals(3)){ 
        <div class="editor-field" style="padding-left:4%">      
            <div class="btn-group" data-toggle="buttons-radio">
              <button id="StatusD" name="StatusD" class="btn btn-large btn-success active" style="width:65%" value="3">Accept</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-warning" style="width:66%" value="5">In Progress</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-danger"style="width:62%" value="4">Reject</button>
               @Html.HiddenFor(model => model.StatusD)
            </div>
        </div>
       }
       else if(Model.StatusD.Equals(5)){
        <div class="editor-field" style="padding-left:4%">      
            <div class="btn-group" data-toggle="buttons-radio">
              <button id="StatusD" name="StatusD" class="btn btn-large btn-success" style="width:65%" value="3">Accept</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-warning active" style="width:66%" value="5">In Progress</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-danger"style="width:62%" value="4">Reject</button>
               @Html.HiddenFor(model => model.StatusD)
            </div>
        </div>   
       }
       else if(Model.StatusD.Equals(4)){
         <div class="editor-field" style="padding-left:4%">      
            <div class="btn-group" data-toggle="buttons-radio">
              <button id="StatusD" name="StatusD" class="btn btn-large btn-success" style="width:65%" value="3">Accept</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-warning" style="width:66%" value="5">In Progress</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-danger active"style="width:62%" value="4">Reject</button>
               @Html.HiddenFor(model => model.StatusD)
            </div>
        </div>  
       }
       else{
         <div class="editor-field" style="padding-left:4%">      
            <div class="btn-group" data-toggle="buttons-radio">
              <button id="StatusD" name="StatusD" class="btn btn-large btn-success" style="width:65%" value="3">Accept</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-warning" style="width:66%" value="5">In Progress</button>
              <button id="StatusD" name="StatusD" class="btn btn-large btn-danger"style="width:62%" value="4">Reject</button>
               @Html.HiddenFor(model => model.StatusD)
            </div>
        </div>
       }

        <div class="editor-label">
            <b>UAT</b>
        </div>
        <div class="editor-field">
            @Html.DropDownList("UATID", String.Empty)
            @Html.ValidationMessageFor(model => model.UATID)
        </div>

        <p>
            <input class="btn btn-small btn-primary" type="submit" value="Save" />
        </p>
    </fieldset>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
